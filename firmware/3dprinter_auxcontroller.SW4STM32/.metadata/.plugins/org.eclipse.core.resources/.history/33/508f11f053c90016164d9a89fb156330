/*
 * housekeeping.h
 *
 *  Created on: Oct 14, 2016
 *      Author: dabit
 */

#ifndef HOUSEKEEPING_H_
#define HOUSEKEEPING_H_

#define TICKS_PER_SEC 30000								/* Timer ISR rate */

#define NR_ADC_CHANNELS 8								/* Number of enabled ADC channels */

#ifndef bool
typedef uint8_t bool;
#endif
#ifndef true
#define true 1
#endif
#ifndef false
#define false 0
#endif

/* Modulator speeds. DC can be pulsed much faster than zero-crossing AC */
typedef enum  {
	DC_FAST,				// Use a base frequency of 30kHz for the PDM modulator
	DC_SLOW,				// unused
	AC_SLOW					// Use a base frequency of 100Hz for the PDM modulator
} Modulator_Speed;

/* Output modulator data */
typedef struct {
	GPIO_TypeDef* GPIOport;	// I/O port for the modulator pin
	uint16_t GPIOpin;		// I/O pin number
	Modulator_Speed Speed;	// The modulator speed to use
	uint32_t accumulator;	// Accumulator used for the PDM modulator. 'overflows' at 0x80000000
	uint32_t increment;		// Accumulator increment.
} OutModulator;

extern volatile bool bGotData, IsRunning;				/* Set to true when we received a packet from the host */
extern volatile int32_t CommTimeoutCtr;		/* Communications timeout downcounter */


#endif /* HOUSEKEEPING_H_ */
